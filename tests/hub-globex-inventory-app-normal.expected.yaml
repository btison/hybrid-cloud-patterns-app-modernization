---
# Source: inventory-app/charts/inventory-db/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory-db
  labels:
    helm.sh/chart: inventory-db-0.1.0
    app.kubernetes.io/name: inventory-db
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: inventory-app/charts/inventory-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory
  labels:
    helm.sh/chart: inventory-service-0.1.0
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: inventory-app/charts/inventory-db/templates/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: inventory-db
  labels:
    helm.sh/chart: inventory-db-0.1.0
    app.kubernetes.io/name: inventory-db
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  database-user: inventory
  database-password: inventory
  database-name: inventory
type: Opaque
---
# Source: inventory-app/charts/inventory-db/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: inventory-db
  labels:
    helm.sh/chart: inventory-db-0.1.0
    app.kubernetes.io/name: inventory-db
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: postgresql
  selector:
    app.kubernetes.io/name: inventory-db
    app.kubernetes.io/instance: hub-globex-inventory-app
---
# Source: inventory-app/charts/inventory-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: inventory
  labels:
    helm.sh/chart: inventory-service-0.1.0
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: hub-globex-inventory-app
---
# Source: inventory-app/charts/inventory-db/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-db
  labels:
    helm.sh/chart: inventory-db-0.1.0
    app.kubernetes.io/name: inventory-db
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.openshift.io/runtime: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: inventory-db
      app.kubernetes.io/instance: hub-globex-inventory-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inventory-db
        app.kubernetes.io/instance: hub-globex-inventory-app
    spec:
      containers:
        - name: inventory-db
          image:  "quay.io/globex-recommendation/inventory-database:0f2bc23"
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: inventory-db
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: inventory-db
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: inventory-db
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: inventory-db
---
# Source: inventory-app/charts/inventory-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: |
      [{"apiVersion":"apps/v1","kind":"Deployment","name":"inventory-db"}]
  labels:
    helm.sh/chart: inventory-service-0.1.0
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: hub-globex-inventory-app
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.openshift.io/runtime: quarkus
  name: inventory
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: inventory
      app.kubernetes.io/instance: hub-globex-inventory-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inventory
        app.kubernetes.io/instance: hub-globex-inventory-app
    spec:
      containers:
        - name: inventory-service
          image:  "quay.io/globex-recommendation/inventory:6500629"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3        
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: inventory-db
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: inventory-db
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: inventory-db
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: jdbc:postgresql://inventory-db:5432/${POSTGRESQL_DATABASE}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: inventory
